VELA RF GUN MODULATOR CONFIG FILE v1

Feel free to write any comments all over this file,
although beware, try not to use any of the keywords used to define parameters, etc!

capitalised words / phrases are keywords the reader searches for
spaces are skipped
; indicates end of line (data entry)
on a keyword line comments can go after;

START_OF_DATA;

VERSION = 1;

PV_COMMANDS_START;              These are Pvs that are needed to send commands, i.e. switch things on / off, They are not monitored.

PV_SUFFIX_GUN_MOD_RESET = Sys:Reset;
PV_CHTYPE       = DBR_ENUM;

##set the state of the mod, off, standby, HVOn, RFOn 
PV_SUFFIX_GUN_MOD_STATE_SET = Sys:StateSet:W;
PV_CHTYPE          = DBR_ENUM;

#pv_suffix must come first before other paramaters to be added to the struct.#

PV_MONITORS_START;              These are the PVs that will be continuously monitored

##the read of the the state set,  off, standby, HVOn, RFOn 
PV_SUFFIX_GUN_MOD_STATE_SET_READ  = Sys:StateSet
PV_CHTYPE           = DBR_ENUM;
PV_COUNT            = 1;
PV_MASK             = DBE_VALUE;

##the main state read, all 13 states,  
PV_SUFFIX_GUN_MOD_MAIN_STATE_READ = Sys:StateRead;
PV_CHTYPE           = DBR_ENUM;
PV_COUNT            = 1;
PV_MASK             = DBE_VALUE; #

PV_SUFFIX_GUN_MOD_ERR_SVAL = Sys:ErrorRead.SVAL;
PV_CHTYPE          = DBR_STRING;
PV_COUNT           = 1;
PV_MASK            = DBE_VALUE;

PV_SUFFIX_GUN_MOD_ILOCK1 = Sys:INTLK1;
PV_CHTYPE          = DBR_STRING;
PV_COUNT           = 1;
PV_MASK            = DBE_VALUE;

PV_SUFFIX_GUN_MOD_ILOCK2 = Sys:INTLK2;
PV_CHTYPE          = DBR_STRING;
PV_COUNT           = 1;
PV_MASK            = DBE_VALUE;

PV_SUFFIX_GUN_MOD_ILOCK3 = Sys:INTLK3;
PV_CHTYPE          = DBR_STRING;
PV_COUNT           = 1;
PV_MASK            = DBE_VALUE;

PV_SUFFIX_GUN_MOD_ILOCK4 = Sys:INTLK4;
PV_CHTYPE          = DBR_STRING;
PV_COUNT           = 1;
PV_MASK            = DBE_VALUE;

PV_SUFFIX_GUN_MOD_ILOCK5 = Sys:INTLK5;
PV_CHTYPE          = DBR_STRING;
PV_COUNT           = 1;
PV_MASK            = DBE_VALUE;


PV_SUFFIX_GUN_MOD_WARMUPT = Sys:RemainingTime;
PV_CHTYPE         = DBR_LONG;
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_MAGPS1_CURR_READ = Rf:MagPs1:CurrRead;
PV_CHTYPE         = DBR_DOUBLE;
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_MAGPS2_CURR_READ = Rf:MagPs2:CurrRead;
PV_CHTYPE         = DBR_DOUBLE;
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_MAGPS3_CURR_READ = Rf:MagPs3:CurrRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_MAGPS4_CURR_READ = Rf:MagPs4:CurrRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_MAGPS1_VOLT_READ = Rf:MagPs1:VoltRead;
PV_CHTYPE         = DBR_DOUBLE;
PV_COUNT          = 1;
PV_MASK            = DBE_VALUE;

PV_SUFFIX_GUN_MOD_MAGPS2_VOLT_READ = Rf:MagPs2:VoltRead;
PV_CHTYPE         = DBR_DOUBLE;
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_MAGPS3_VOLT_READ = Rf:MagPs3:VoltRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_MAGPS4_VOLT_READ = Rf:MagPs4:VoltRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_HVPS1_CURR_READ = HvPs:HvPs1:CurrRead;
PV_CHTYPE         = DBR_DOUBLE;
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_HVPS2_CURR_READ = HvPs:HvPs2:CurrRead;
PV_CHTYPE         = DBR_DOUBLE;
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_HVPS3_CURR_READ = HvPs:HvPs3:CurrRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_HVPS1_VOLT_READ = HvPs:HvPs1:VoltRead;
PV_CHTYPE         = DBR_DOUBLE;
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_HVPS2_VOLT_READ = HvPs:HvPs2:VoltRead;
PV_CHTYPE         = DBR_DOUBLE;
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_HVPS3_VOLT_READ = HvPs:HvPs2:VoltRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_CT_READ  = Pt:Diag:CtRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_CVD_READ  = Pt:Diag:CvdRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_PULSE_WIDTH_READ  = Pt:Diag:PlswthRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_PULSE_WIDTH_FWHM_READ  = Pt:Diag:PlswthFwhmRead;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

PV_SUFFIX_GUN_MOD_IONP_PRESSURE_READ = Rf:Ionp:PresRead1;
PV_CHTYPE         = DBR_DOUBLE
PV_COUNT          = 1;
PV_MASK           = DBE_VALUE;

OBJECTS_START;

NUMBER_OF_OBJECTS = 1;      For sanity checks
NUMBER_OF_ILOCKS  = 0;      If the number of interlocks changes between objects, then redefine this before the "name" paramater

NAME  = GUNMODULATOR;
PV_ROOT = CLA-GUNS-HRF-MOD-01:

;GOOD_MOD_ERR = 2000;
;GOOD_MOD_ERR = 5000;
;GOOD_MOD_ERR = 6000;
;GOOD_MOD_ERR = 9000;
;GOOD_MOD_ERR = A000;
;GOOD_MOD_ERR = C000;
;GOOD_MOD_ERR = D000;
;BAD_MOD_ERR  = 8014;
;BAD_MOD_ERR  = 4132;



















END_OF_DATA;
